name: publish_server
on:
  workflow_dispatch:
  push:
    branches:
      - master
env:
  DOCKERHUB_REGISTRY_NAME: iggyrs/iggy
  CRATE_NAME: iggy
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  IGGY_CI_BUILD: true

jobs:
  release_and_publish:
    name: build release ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin:
              - iggy-server
              - iggy
            name: iggy-Linux-x86_64-musl.tar.gz
            cargo_command: cargo
            docker_arch: linux/amd64
            cross: false

          - os_name: Linux-aarch64-musl
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            bin:
              - iggy-server
              - iggy
            name: iggy-Linux-aarch64-musl.tar.gz
            docker_arch: linux/arm64/v8
            cross: true

        toolchain:
          - stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')

      - name: Prepare ${{ matrix.platform.target }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build iggy-server ${{ matrix.platform.target }} release binary
        run: cross +stable build --verbose --release --target ${{ matrix.platform.target }} --bin iggy-server

      - name: Build iggy-cli ${{ matrix.platform.target }} release binary
        run: cross +stable build --verbose --release --no-default-features --target ${{ matrix.platform.target }} --bin iggy

      - name: Prepare artifacts
        run: |
          mkdir -p release_artifacts/
          cp target/${{ matrix.platform.target }}/release/iggy-server release_artifacts/
          cp target/${{ matrix.platform.target }}/release/iggy release_artifacts/

      - name: Print message
        run: echo "::notice ::Published ${{ needs.tag.outputs.server_version }} release artifacts on GitHub"
